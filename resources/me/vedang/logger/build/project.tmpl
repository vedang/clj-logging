(defproject {{group/id}}/{{artifact/id}} "1.0.0-SNAPSHOT"
  :description "Set up Log4J correctly for Clojure projects"
  :license {:name "Eclipse Public License",
            :url "http://www.eclipse.org/legal/epl-v10.html"}
  :profiles
    {:dev {:dependencies [[org.clojure/clojure "1.12.0"]]},
     :test
     {:jvm-opts
      ^:replace
      ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"
       "-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog"
       "-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
       "-Dlog4j2.configurationFile=log4j2-dev.xml"
       "-Dlogging.level=DEBUG"]}}
  :dependencies [;; Set up Log4J2 as the logging backend with proper log
                 ;; library conflict resolution. Use log4j2 as the primary
                 ;; logging library
                 [org.apache.logging.log4j/log4j-api "2.24.3"]
                 [org.apache.logging.log4j/log4j-core "2.24.3"]
                 ;; Needed for logging from inside javax.servlet
                 [org.apache.logging.log4j/log4j-web "2.24.3"]
                 ;; Use pedestal.log as the primary clojure facade. On
                 ;; Babashka, we use taoensso.timbre (which is built-in)
                 ;; instead of pedestal.log. [ref: babashka_logging]
                 [io.pedestal/pedestal.log "0.7.2"]
                 ;; Use jsonista.core to format log as json. On Babashka,
                 ;; we use Cheshire, which is built-in. babashka.json makes
                 ;; the choice transparently. [ref: babashka_json]
                 [metosin/jsonista "0.3.13"]
                 [org.babashka/json "0.1.6"]
                 ;; Use SLF4j as the primary facade for gathering all logs.
                 [org.apache.logging.log4j/log4j-slf4j2-impl "2.24.3"]
                 [org.slf4j/slf4j-api "2.0.17"]
                 ;; Use LMAX Disruptor to enable Async Logging
                 [com.lmax/disruptor "4.0.0"]
                 ;; Redirect everything via the SLF4J API
                 ;; Apache Commons logging
                 [org.slf4j/jcl-over-slf4j "2.0.17"]
                 ;; Log4j 1.x
                 [org.slf4j/log4j-over-slf4j "2.0.17"]
                 ;; OSGI LogService
                 [org.slf4j/osgi-over-slf4j "2.0.17"]
                 ;; Java util logging
                 [org.slf4j/jul-to-slf4j "2.0.17"]
                 ;; DONE
                ]
  :exclusions [;; Exclude transitive dependencies on all other logging
               ;; implementations, including other SLF4J bridges.
               commons-logging
               log4j ;; 1.x
               ch.qos.logback/logback-classic
               ch.qos.logback/logback-core
               org.slf4j/simple
               org.slf4j/slf4j-jcl
               org.slf4j/slf4j-nop
               org.slf4j/slf4j-log4j12
               org.slf4j/slf4j-log4j13]
  :jvm-opts
    ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"
     "-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog"
     "-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
     "-Dlog4j2.configurationFile=log4j2-prod.xml"
     "-Dlogging.level=INFO"])
