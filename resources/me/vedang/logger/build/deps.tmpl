{:paths ["src" "resources"]
 :deps
 {;;; Logging setup is a complex art. Here are the steps as I
  ;;; understand them at the moment, to set up Log4J2 as the logging
  ;;; backend with proper log library conflict resolution.

  ;; Use log4j2 as the primary logging library
  org.apache.logging.log4j/log4j-api {:mvn/version "2.23.1"}
  org.apache.logging.log4j/log4j-core {:mvn/version "2.23.1"}
  ;; Needed for logging from inside javax.servlet
  org.apache.logging.log4j/log4j-web {:mvn/version "2.23.1"}

  ;; Use pedestal.log as the primary clojure facade
  io.pedestal/pedestal.log {:mvn/version "0.6.3"}

  ;; Use jsonista.core to format log as json
  metosin/jsonista {:mvn/version "0.3.8"}

  ;; Use SLF4j as the primary facade for gathering all logs.
  org.apache.logging.log4j/log4j-slf4j2-impl {:mvn/version "2.23.1"},
  org.slf4j/slf4j-api {:mvn/version "2.0.12"},

  ;; Use LMAX Disruptor to enable Async Logging
  com.lmax/disruptor {:mvn/version "4.0.0"},

;;; Redirect everything via the SLF4J API

  ;; Apache Commons logging
  org.slf4j/jcl-over-slf4j {:mvn/version "2.0.12"},
  ;; Log4j 1.x
  org.slf4j/log4j-over-slf4j {:mvn/version "2.0.12"},
  ;; OSGI LogService
  org.slf4j/osgi-over-slf4j {:mvn/version "2.0.12"},
  ;; Java util logging
  org.slf4j/jul-to-slf4j {:mvn/version "2.0.12"}}
 :aliases
 {:test
  {:extra-paths ["test"]
   :extra-deps {org.clojure/test.check {:mvn/version "1.1.1"}
                io.github.cognitect-labs/test-runner
                {:git/tag "v0.5.1" :git/sha "dfb30dd"}}}

  :build
  {:deps {io.github.clojure/tools.build
          {:mvn/version "0.9.6"}
          slipset/deps-deploy {:mvn/version "0.2.0"}}
   :ns-default build}

  :logs-prod
  {:jvm-opts
   ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"
    "-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog"
    "-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
    "-Dlog4j2.configurationFile=log4j2-prod.xml"
    "-Dlogging.level=INFO"]}

  :logs-dev
  {:jvm-opts
   ["-Dclojure.tools.logging.factory=clojure.tools.logging.impl/log4j2-factory"
    "-Dorg.eclipse.jetty.util.log.class=org.eclipse.jetty.util.log.Slf4jLog"
    "-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
    "-Dlog4j2.configurationFile=log4j2-dev.xml"
    "-Dlogging.level=DEBUG"]}}}
